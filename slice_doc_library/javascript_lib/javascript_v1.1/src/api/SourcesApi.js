/**
 * Slice Doc Library - T3
 * This is api documentation for slice document library. Team `SLICE - T3`
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GdriveFileList from '../model/GdriveFileList';
import GdriveToken from '../model/GdriveToken';
import GdriveUrl from '../model/GdriveUrl';
import InlineObject from '../model/InlineObject';
import InlineObject1 from '../model/InlineObject1';
import InlineObject2 from '../model/InlineObject2';

/**
* Sources service.
* @module api/SourcesApi
* @version 1.0.0
*/
export default class SourcesApi {

    /**
    * Constructs a new SourcesApi. 
    * @alias module:api/SourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gDriveSourceAuth operation.
     * @callback module:api/SourcesApi~gDriveSourceAuthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GdriveUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Google Drive Auth Url
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject} opts.inlineObject 
     * @param {module:api/SourcesApi~gDriveSourceAuthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GdriveUrl}
     */
    gDriveSourceAuth(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GdriveUrl;
      return this.apiClient.callApi(
        '/source/gdrive/auth', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gDriveSourceAuthCallback operation.
     * @callback module:api/SourcesApi~gDriveSourceAuthCallbackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GdriveToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns oauth token from google callback url
     * @param {module:model/null} UNKNOWN_PARAMETER_NAME Auth Code sent upon gdrive auth
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject1} opts.inlineObject1 
     * @param {module:api/SourcesApi~gDriveSourceAuthCallbackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GdriveToken}
     */
    gDriveSourceAuthCallback(UNKNOWN_PARAMETER_NAME, opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject1'];
      // verify the required parameter 'UNKNOWN_PARAMETER_NAME' is set
      if (UNKNOWN_PARAMETER_NAME === undefined || UNKNOWN_PARAMETER_NAME === null) {
        throw new Error("Missing the required parameter 'UNKNOWN_PARAMETER_NAME' when calling gDriveSourceAuthCallback");
      }

      let pathParams = {
      };
      let queryParams = {
        'code': UNKNOWN_PARAMETER_NAME
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GdriveToken;
      return this.apiClient.callApi(
        '/source/gdrive/oauth2callback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gDriveSourceListFiles operation.
     * @callback module:api/SourcesApi~gDriveSourceListFilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GdriveFileList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of all files in authenticated user's google drive
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject2} opts.inlineObject2 
     * @param {module:api/SourcesApi~gDriveSourceListFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GdriveFileList}
     */
    gDriveSourceListFiles(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject2'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GdriveFileList;
      return this.apiClient.callApi(
        '/source/gdrive/listFiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
