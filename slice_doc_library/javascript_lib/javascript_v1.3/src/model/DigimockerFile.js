/**
 * Slice Doc Library - T3
 * This is api documentation for slice document library. Team `SLICE - T3`
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DigimockerFile model module.
 * @module model/DigimockerFile
 * @version 1.0.0
 */
class DigimockerFile {
    /**
     * Constructs a new <code>DigimockerFile</code>.
     * @alias module:model/DigimockerFile
     * @param exported {String} 
     * @param id {String} 
     * @param name {String} 
     * @param email {String} 
     * @param url {String} 
     * @param identifier {String} 
     * @param v {Number} 
     */
    constructor(exported, id, name, email, url, identifier, v) { 
        
        DigimockerFile.initialize(this, exported, id, name, email, url, identifier, v);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, exported, id, name, email, url, identifier, v) { 
        obj['exported'] = exported;
        obj['_id'] = id;
        obj['name'] = name;
        obj['email'] = email;
        obj['url'] = url;
        obj['identifier'] = identifier;
        obj['__v'] = v;
    }

    /**
     * Constructs a <code>DigimockerFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DigimockerFile} obj Optional instance to populate.
     * @return {module:model/DigimockerFile} The populated <code>DigimockerFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DigimockerFile();

            if (data.hasOwnProperty('exported')) {
                obj['exported'] = ApiClient.convertToType(data['exported'], 'String');
            }
            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('__v')) {
                obj['__v'] = ApiClient.convertToType(data['__v'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} exported
 */
DigimockerFile.prototype['exported'] = undefined;

/**
 * @member {String} _id
 */
DigimockerFile.prototype['_id'] = undefined;

/**
 * @member {String} name
 */
DigimockerFile.prototype['name'] = undefined;

/**
 * @member {String} email
 */
DigimockerFile.prototype['email'] = undefined;

/**
 * @member {String} url
 */
DigimockerFile.prototype['url'] = undefined;

/**
 * @member {String} identifier
 */
DigimockerFile.prototype['identifier'] = undefined;

/**
 * @member {Number} __v
 */
DigimockerFile.prototype['__v'] = undefined;






export default DigimockerFile;

